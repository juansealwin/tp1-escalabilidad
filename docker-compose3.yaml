name: tp1-escalabilidad
services:
  rabbitmq:
    build:
      context: ./rabbitmq
      dockerfile: Dockerfile
    ports:
      - "15672:15672"  
      - "5672:5672"  
 

  column_filter:
    build: 
      context: ./
      dockerfile: ./column_filter/Dockerfile
    restart: on-failure
    entrypoint: python3 /main.py
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - LOG_LEVEL=INFO  

  book_data_sender:
    build: 
      context: ./
      dockerfile: ./data_sender/Dockerfile
    restart: on-failure
    entrypoint: python3 /main.py
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    volumes:
      - ./data:/data
    environment:
      - QUEUE_NAME=books_data
      #- DATA_FILE=data/books_data_reduced.csv
      - DATA_FILE=data/books_data.csv
      - LOG_LEVEL=INFO 

  rating_data_sender:
    build: 
      context: ./
      dockerfile: ./data_sender/Dockerfile
    restart: on-failure
    entrypoint: python3 /main.py
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    volumes:
      - ./data:/data
    environment:
      - QUEUE_NAME=rating_data
      #- DATA_FILE=data/books_rating_reduced.csv
      - DATA_FILE=data/Books_rating.csv
      - LOG_LEVEL=INFO 

  review_counter:
    build: 
      context: ./
      dockerfile: ./review_counter/Dockerfile
    restart: on-failure
    entrypoint: python3 /main.py
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - LOG_LEVEL=INFO
      - PAIR_COUNT=3
      - LEADER=0
      - ID=0

  review_counter_1:
    build: 
      context: ./
      dockerfile: ./review_counter/Dockerfile
    restart: on-failure
    entrypoint: python3 /main.py
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - LOG_LEVEL=INFO
      - PAIR_COUNT=3
      - LEADER=0
      - ID=1
    
  review_counter_2:
    build: 
      context: ./
      dockerfile: ./review_counter/Dockerfile
    restart: on-failure
    entrypoint: python3 /main.py
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - LOG_LEVEL=INFO
      - PAIR_COUNT=3
      - LEADER=0
      - ID=2

  joiner:
    build: 
      context: ./
      dockerfile: ./joiner/Dockerfile
    restart: on-failure
    entrypoint: python3 /main.py
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - LOG_LEVEL=INFO
      - TOTAL_WORKERS=1
      - MIN_REVIEWS=500


  client:
    build: 
      context: ./
      dockerfile: ./client/Dockerfile
    restart: on-failure
    entrypoint: python3 /main.py
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    volumes:
      - ./data:/data
    environment:
      - QUERY_TYPE=Query3
      - LOG_LEVEL=INFO   